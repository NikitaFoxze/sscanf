name: Build and Release

on:
  workflow_dispatch:
  push:
    branches:
      - "*"
      - "*/*"
      - "**"
    tags: ['v*']
  pull_request:
    branches:
      - "*"
      - "*/*"
      - "**"

jobs:
  build-windows-release:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          clean: true
          submodules: recursive
          fetch-depth: 0

      - name: Check CMake version
        run: cmake --version

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Install latest conan
        run: |
          python -m pip install --upgrade pip
          pip install conan
          
      - name: Generate build files
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release .. -G "Visual Studio 17 2022" -A Win32
          cmake --build . --config Release
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            build/Release/sscanf.dll
            sscanf2.inc
            LICENSE
            pawn.json
            README.md

  build-linux-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          clean: true
          submodules: recursive
          fetch-depth: 0

      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install g++-multilib cmake

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Install latest conan
        run: |
          python -m pip install --upgrade pip
          pip install conan

      - name: Generate build files
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_FLAGS=-m32 -DCMAKE_CXX_FLAGS=-m32

      - name: Build
        run: |
          cd build
          cmake --build . --config Release

      - name: Rename and upload artifacts
        run: |
          cd build
          mv ./libsscanf.so ./sscanf.so
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: |
            build/sscanf.so
            sscanf2.inc
            LICENSE
            pawn.json
            README.md

  create-release-packages:
    runs-on: windows-latest
    needs: [build-windows-release, build-linux-release]
    
    steps:
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: windows-files/
        
      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: linux-files/
        
      - name: Check files structure
        run: |
          echo "=== Windows files ==="
          Get-ChildItem -Path "windows-files" -Recurse -Force
          echo "=== Linux files ==="
          Get-ChildItem -Path "linux-files" -Recurse -Force
        
      - name: Get version
        run: |
          $version = $env:GITHUB_SHA.Substring(0, 7)
          echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "Version: $version"
            
      - name: Install 7-Zip
        run: choco install 7zip -y
            
      - name: Create Windows package
        run: |
          $dllPath = "windows-files/build/Release/sscanf.dll"
          if (-not (Test-Path $dllPath)) { 
            Write-Host "Available files:"
            Get-ChildItem -Path "windows-files" -Recurse
            throw "Windows sscanf.dll not found at: $dllPath" 
          }
          
          mkdir windows-package
          cd windows-package
          
          copy "..\$dllPath" amxsscanf.dll
          copy ..\windows-files\LICENSE LICENSE
          copy ..\windows-files\pawn.json pawn.json
          copy ..\windows-files\README.md README.md
          copy ..\windows-files\sscanf2.inc .\
          
          mkdir components
          copy "..\$dllPath" components\sscanf.dll
          
          mkdir plugins
          copy "..\$dllPath" plugins\sscanf.dll
          
          mkdir pawno
          cd pawno
          mkdir include
          copy ..\..\windows-files\sscanf2.inc include\sscanf2.inc
          cd ..
          
          mkdir qawno
          cd qawno
          mkdir include
          copy ..\..\windows-files\sscanf2.inc include\sscanf2.inc
          cd ..
          
          7z a -tzip windows-$env:VERSION.zip *
          cd ..
            
      - name: Create Linux package
        run: |
          $soPath = "linux-files/build/sscanf.so"
          if (-not (Test-Path $soPath)) { 
            Write-Host "Available files:"
            Get-ChildItem -Path "linux-files" -Recurse
            throw "Linux sscanf.so not found at: $soPath" 
          }
          
          mkdir linux-package
          cd linux-package
          
          copy "..\$soPath" amxsscanf.so
          copy ..\linux-files\LICENSE LICENSE
          copy ..\linux-files\pawn.json pawn.json
          copy ..\linux-files\README.md README.md
          copy ..\linux-files\sscanf2.inc .\
          
          mkdir components
          copy "..\$soPath" components\sscanf.so
          
          mkdir plugins
          copy "..\$soPath" plugins\sscanf.so
          
          mkdir pawno
          cd pawno
          mkdir include
          copy ..\..\linux-files\sscanf2.inc include\sscanf2.inc
          cd ..
          
          mkdir qawno
          cd qawno
          mkdir include
          copy ..\..\linux-files\sscanf2.inc include\sscanf2.inc
          cd ..
          
          7z a -ttar -so -an * | 7z a -si linux-$env:VERSION.tar.gz
          cd ..
            
      - name: Upload release packages
        uses: actions/upload-artifact@v4
        with:
          name: release-packages
          path: |
            windows-$env:VERSION.zip
            linux-$env:VERSION.tar.gz
